name: Container Builder

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build the proxy for ${{matrix.docker}}
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.arm_version }}

    strategy:
      matrix:
        include:
          - goos: linux
            goarch: arm
            arm_version: "7"
            docker: linux/armv7

          - goos: linux
            goarch: arm64
            docker: linux/aarch64

          - goos: linux
            goarch: amd64
            docker: linux/amd64

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - run: |
          output_file=tailscale-reverse-proxy-$(echo ${{ matrix.docker }} | tr / - )
          echo "output_file=$output_file" >> "$GITHUB_ENV"
      - run: go build -v . -o ${{ env.output_file }}
      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.output_file }}
          path: ${{ env.output_file }}
          if-no-files-found: error
          retention-days: 1

  build-image:
    runs-on: ubuntu-latest
    name: Build the docker images for ${{matrix.docker}}
    needs:
      - build
    strategy:
      matrix:
        docker:
          - linux/armv7
          - linux/aarch64
          - linux/amd64

    steps:
      - run: |
          output_file=tailscale-reverse-proxy-$(echo ${{ matrix.docker }} | tr / - )
          echo executable=$output_file" >> "$GITHUB_ENV"
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.executable }}
          path: ${{ env.executable }}
      - uses: docker/setup-buildx-action@v2
      - name: Log in to the Github Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=auto
          tags: |
            type=edge,branch=main
            type=pep440,pattern={{raw}}
            type=pep440,pattern=v{{major}}.{{minor}}
            type=ref,event=pr

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.docker }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            EXECUTABLE=${{ env.executable }}

          outputs: type=image,name=ghcr.io/${{ github.repository }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests-${{ github.event.repository.name }}
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests-${{ github.event.repository.name }}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests-${{ github.event.repository.name }}
          path: /tmp/digests-${{ github.event.repository.name }}/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    name: Merge the builds for ${{ github.event.repository.name }}
    needs:
      - build-image

    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests-${{ github.event.repository.name }}
          path: /tmp/digests-${{ github.event.repository.name }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
      - name: Log in to the Github Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest list and push
        working-directory: /tmp/digests-${{ github.event.repository.name }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/${{ github.repository }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }}
